How does the shell compare to a desktop interface? 

An operating system is a specific kind of program. 
It controls the computer's processor, hard drive, and network connection, 
but its most important job is to run other programs.

Before computers had graphical displays, though, 
people typed instructions into a program called a command-line shell.



 What is the relationship between the graphical file explorer that most 
 people use and the command-line shell?

    They are both interfaces for issuing commands to the operating system.



pwd = "print working directory" 
pwd takes you to /home/repl = the directory repl sits within the home directory.
It's the current directory that you're working in. 


ls /home/repl/seasonal = lists the files within the seasonal directory. 


Relative path = going from where you are. 
Absolute path = stating the full path. 

E.g., relative path:
      You are in the directory /home/repl, just type seasonal to be in 
      /home/repl/seasonal

E.g., absolute path:
      No matter what directory you're in, just type /home/repl/seasonal 
      to go there. 


cd /home/repl/seasonal = "change directory"
cd allows you to go into the seasonal directory.


Parents and children:
/home/   = parent directory of /home/repl
/repl    = child directory of /home/


..       = takes you from your current directory to the parent directory, one directory back.
~/../.   = takes you from /home/repl/seasonal to /home (back two).
cd ~     = also takes you to home directory. 


cp original.txt duplicate.txt = copies original, creates new file called duplicate  
                                with the exact same information inside.
                                If duplicate.txt already exists, it's now overwritten.
    If the last parameter to cp is a directory (e.g. /home/repl), all files are copied.

cp seasonal/spring.csv seasonal/summer.csv backup = copies two files and copies them
                                                    into the backup directory.


mv = moving a file, e.g.,
mv seasonal/spring.csv seasonal/summer.csv backup = moves two files into backup.


..        = takes you from current directory to the parent directory.
~/../.    = takes you from /home/repl/seasonal to /home (back two). 


mv                               = also used for renaming files, e.g.,
mv winter.csv winter.csv.bck     = changes name to now end in .bck
mv seasonal by-season            = changes directory name 


rm                         = remove file, e.g.,
rm autumn.csv              = removes autumn file when you're in /seasonal/
rm seasonal/autumn.csv     = removes file while inside home directory.


